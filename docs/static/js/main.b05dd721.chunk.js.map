{"version":3,"sources":["DataTabs.js","App.js","reportWebVitals.js","index.js"],"names":["Text","Typography","TabPane","Tabs","DataTabs","columns","title","dataIndex","key","defaultSortOrder","render","text","record","direction","prev_rank","style","fontSize","disabled","sorter","a","b","rank","name","localeCompare","align","toString","replace","credit","wus","color","arrow","change","parseInt","ArrowDownOutlined","ArrowUpOutlined","value","valueStyle","prefix","defaultActiveKey","tab","dataSource","data","foldingathome_apis","response","results","pagination","defaultPageSize","donors","App","className","alt","src","height","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","window","CSPSettings","nonce"],"mappings":"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","file":"static/js/main.b05dd721.chunk.js","sourcesContent":["import { Table, Statistic, Space, Tabs, Typography } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport { Fragment } from 'react';\nimport data from './data.json';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\nconst DataTabs = () => {\n  const columns = [\n    {\n      title: 'Rank',\n      dataIndex: 'rank',\n      key: 'rank',\n      defaultSortOrder: 'ascend',\n      render: (text, record) => (\n        <Space direction=\"horizontal\">\n          <Text>{ text }</Text>\n          { record.prev_rank && (<Text style={{ fontSize: '0.8rem' }} disabled>/ Prev: { record.prev_rank }</Text>) }\n        </Space>\n      ),\n      sorter: (a, b) => a.rank - b.rank,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: 'Credit',\n      dataIndex: 'credit',\n      key: 'credit',\n      align: 'right',\n      render: text => text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      sorter: (a, b) => a.credit - b.credit,\n    },\n    {\n      title: 'WUs',\n      dataIndex: 'wus',\n      key: 'wus',\n      align: 'right',\n      render: text => text.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n      sorter: (a, b) => a.wus - b.wus,\n    },\n    {\n      title: 'Team',\n      dataIndex: 'team',\n      key: 'team',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: 'Change',\n      key: 'change',\n      render: (text, record) => {\n        if ( record.prev_rank ) {\n          const change = parseInt(record.prev_rank - record.rank) || 0;\n          let color, arrow;\n          if (change !== 0) {\n            color = change < 0 ? '#cf1322' : '#3f8600';\n            arrow = change < 0 ? <ArrowDownOutlined /> : <ArrowUpOutlined />;\n          }\n          return (<Statistic\n            value={ change }\n            valueStyle={{ color: color }}\n            prefix={ arrow }\n          />);    \n        }\n      },\n      sorter: (a, b) => (parseInt(b.prev_rank - b.rank) || 0) - (parseInt(a.prev_rank - a.rank) || 0),\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Team Monthly\" key=\"1\">\n          <Table columns={ columns } dataSource={ data.foldingathome_apis[0].response.results } pagination={{ defaultPageSize: 100 }} />\n        </TabPane>\n        <TabPane tab=\"Team\" key=\"2\">\n          <Table columns={ columns } dataSource={ data.foldingathome_apis[1].response.results } pagination={{ defaultPageSize: 100 }} />\n        </TabPane>\n        <TabPane tab=\"Donor\" key=\"3\">\n          <Table columns={ columns } dataSource={ data.foldingathome_apis[2].response.donors } pagination={{ defaultPageSize: 100 }} />\n        </TabPane>\n        <TabPane tab=\"OS Stats\" key=\"4\">\n          <Table columns={ columns } dataSource={ data.foldingathome_apis[5].response.results } pagination={{ defaultPageSize: 100 }} />\n        </TabPane>\n      </Tabs>\n    </Fragment>\n  );\n}\n\nexport default DataTabs;\n","import React, { Fragment } from 'react';\nimport './App.less';\nimport { PageHeader } from 'antd';\nimport DataTabs from './DataTabs';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <PageHeader\n        title={(\n          <Fragment>\n            <img alt='FOLDING@HOME' src='logo-2.png' height='50' />\n          </Fragment>\n        )}\n      />\n      <div style={{ padding: '0 24px' }}>\n        <DataTabs />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// In order for style elements to be added to the DOM, a nonce attribute\n// may need to be attached to the elements to adhere to a CSP requirements.\n// To provide the value, you can specify the nonce value by defining a\n// CSPSettings object on the page in global scope:\nwindow.CSPSettings = {\n  nonce: 'nonce'\n};"],"sourceRoot":""}